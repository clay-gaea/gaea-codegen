<?php namespace [(${namespace})]\Service;
[# th:each="import : ${config.getImportsByApi(api)}"]
use [(${import})];[/]

interface [(${api.getClassname()})]Interface
{[# th:each="operation : ${api.operations}"]
    /**
     * [(${operation.summary})][# th:each="parameter : ${operation.getParameters()}"]
     * @param $[(${parameter.name})] [(${config.getClassBySchema(parameter.schema)})][(${parameter.getIn()=='body' && parameter.required==false}?'|NULL':'')] [(${parameter.description})][/]
     * @return [(${config.getClassBySchema(operation.returnSchema)})][(${operation.returnSchema.get$ref()!=null}?'|NULL':'')]
     */
    public function [(${operation.operationId})]([# th:each="parameter : ${operation.getParameters()}"][(${parameter.getIn()=='body' && parameter.required==false}?'?':'')][(${config.getClassBySchema(parameter.schema)})] $[(${parameter.name})][(${parameter.defaultVal!=null?" = " + parameter.defaultVal : ""})][(${parameterStat.last?"":", "})][/]): [(${operation.returnSchema.get$ref()!=null}?'?':'')][(${operation.returnIsArray?"array":config.getClassBySchema(operation.returnSchema)})];

[/]}
