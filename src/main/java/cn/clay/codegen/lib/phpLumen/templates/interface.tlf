<?php namespace [(${namespace})]\Service;
[# th:each="import : ${config.getImportsByApi(api)}"]
use [(${import})];[/]

interface [(${api.getClassname()})]Interface
{[# th:each="operation : ${api.operations}"]
    /**
     * [(${operation.summary})][# th:each="parameter : ${operation.getParameters()}"]
     * @param $[(${parameter.name})] [(${config.getClassBySchema(parameter.schema)})][(${parameter.getIn()=='body' && parameter.required==false}?'|NULL':'')] [(${parameter.description})][/]
     * @return [(${config.getClassBySchema(operation.returnParameter.schema)})][# th:if="${operation.httpMethod.toString() == 'DELETE'}"]
     *
     * @throws \Exception[/]
     */
    public function [(${operation.operationId})]([# th:each="parameter : ${operation.getParameters()}"][(${parameter.schema.get$ref!=null && parameter.required==false}?'?':'')][(${parameter.isArray?'array':config.getClassBySchema(parameter.schema)})] $[(${parameter.name})][(${parameter.defaultVal!=null?" = " + parameter.defaultVal : ""})][(${parameterStat.last?"":", "})][/]): [(${operation.returnParameter.required?'':'?'})][(${operation.returnParameter.isArray?"array":config.getClassBySchema(operation.returnParameter.schema)})];

[/]}
